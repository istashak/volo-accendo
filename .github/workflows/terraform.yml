name: Terraform Apply

# Trigger the workflow on push events to the main branch
on:
  workflow_dispatch: # Enable manual triggering
  workflow_run:
    workflows:
      - Contacts Api Build and Test
    types:
      - completed

  # push:
  #   branches:
  #     - main
  #     - develop
  #   paths:
  #     - "cloud/terraform/**"
  # pull_request:
  #   branches:
  #     - main
  #     - develop
  #   paths:
  #     - "cloud/terraform/**"

# permissions:
  # actions: read  # Ensure the token has permission to read artifacts

jobs:
  terraform:
    # Define the environment where the job will run
    runs-on: ubuntu-latest

    # permissions:
    #   actions: read    # Ensure the token has permission to read artifacts
    #   contents: read

    steps:
      # Step 1: Check out the code from the repository
      # This step clones the repository into the runner's workspace, making the code available for subsequent steps.
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
          # ref: develop
          # ref: ${{ inputs.branch || github.event.workflow_run.head_branch }}

      # Uncomment for debugging
      - name: List directory contents 1
        run: |
          ls -R

      # Uncomment for debugging
      - name: List directory contents 2
        run: |
          ls -R

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
        # This step installs the specified version of Terraform on the runner.

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Environment Variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "TF_VAR_environment=prod" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
            echo "TF_VAR_environment=dev" >> $GITHUB_ENV
          fi

      # Step 3: Install Terraform dependencies
      - name: Install dependencies
        run: |
          cd cloud/terraform/${{ env.TF_VAR_environment }}
          terraform init
        # This step initializes the Terraform configuration directory.
        # It installs the required provider plugins and sets up the workspace.

      # Step 4: Validate Terraform Scripts
      - name: Terraform Format and Validate
        run: |
          cd cloud/terraform/${{ env.TF_VAR_environment }}
          terraform fmt
          terraform validate -no-color
