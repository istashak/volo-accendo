name: Build and Deploy

# Define the events that trigger this workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - "web/volo-accendo-website/**"
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "web/volo-accendo-website/**"

jobs:
  build:
    # Use the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install pnpm
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.5.0

      # Step 3: Set up Node.js environment
      - uses: actions/setup-node@v4
        name: Set up Node.js
        with:
          node-version: "20.x"
          cache: "pnpm"
          cache-dependency-path: web/volo-accendo-website/pnpm-lock.yaml

      - name: Set Environment Variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "ENV=prod" >> $GITHUB_ENV
              echo "S3_BUCKET_NAME=volo-accendo-vpc-prod-web-app-bucket" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
              echo "ENV=dev" >> $GITHUB_ENV
              echo "S3_BUCKET_NAME=volo-accendo-vpc-dev-web-app-bucket" >> $GITHUB_ENV
          fi

      # Step 4: Install project dependencies using pnpm
      - name: Install dependencies
        run: |
          cd web/volo-accendo-website
          pnpm install

      # Comment/Uncomment for debugging
      - name: List directory contents I
        run: |
          ls -R

      # Step 5: Build the project
      - name: Build project
        run: |
          cd web/volo-accendo-website
          pnpm build:$ENV

      - name: Prune devDependencies
        run: |
          cd web/volo-accendo-website
          pnpm install --prod --no-optional

      - name: Archive lambdas directory
        run: |
          cd web/volo-accendo-website
          pnpm zip:lambdas

      # Comment/Uncomment for debugging
      - name: List directory contents II
        run: |
          ls -R

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install --upgrade awscli
          aws --version

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1" # Adjust if necessary
        run: |
          cd web/volo-accendo-website 
          aws s3 sync .next/standalone/.next/server/app s3://$S3_BUCKET_NAME --delete
          aws s3 cp .lambdas/nextjs-lambda-edge.zip s3://$S3_BUCKET_NAME/nextjs-lambda-edge.zip
