name: Terraform Plan and Apply

on:
  workflow_dispatch: # Enable manual triggering
  push:
    branches:
      - main
      - develop
    paths:
      - "cloud/apis/contacts-api/**"
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "cloud/apis/contacts-api/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}  # Terraform Cloud API token from GitHub secrets
      TF_ORG: "volo-accendo"       # Replace with your Terraform Cloud organization name
      TF_WORKSPACE: "volo-accendo-contacts-api-dev"    # Replace with your Terraform Cloud workspace name

    steps:
    - name: Start Terraform Plan and Apply Run
      id: start_run
      run: |
        # Start a new run in the workspace
        response=$(curl -s -X POST \
          -H "Authorization: Bearer $TF_API_TOKEN" \
          -H "Content-Type: application/vnd.api+json" \
          https://app.terraform.io/api/v2/runs \
          -d '{
                "data": {
                  "attributes": {
                    "is-destroy": false
                  },
                  "type": "runs",
                  "relationships": {
                    "workspace": {
                      "data": {
                        "type": "workspaces",
                        "id": "'$(curl -s -H "Authorization: Bearer $TF_API_TOKEN" \
                                   https://app.terraform.io/api/v2/organizations/$TF_ORG/workspaces/$TF_WORKSPACE | jq -r .data.id)'"
                      }
                    }
                  }
                }
              }')
        
        # Extract the run ID for polling
        echo "RUN_ID=$(echo $response | jq -r .data.id)" >> $GITHUB_ENV

    - name: Poll Terraform Run Status
      id: poll_run
      run: |
        # Poll every 30 seconds to check the run status
        while true; do
          status=$(curl -s -H "Authorization: Bearer $TF_API_TOKEN" \
                          https://app.terraform.io/api/v2/runs/$RUN_ID | jq -r .data.attributes.status)

          echo "Current status: $status"
          
          if [ "$status" == "applied" ]; then
            echo "Terraform run completed successfully."
            break
          elif [[ "$status" == "errored" || "$status" == "canceled" ]]; then
            echo "Terraform run failed or was canceled."
            exit 1
          else
            echo "Run is still in progress. Checking again in 30 seconds..."
            sleep 30
          fi
        done

    - name: Run Completion Notice
      if: steps.poll_run.outcome == 'success'
      run: echo "Terraform Plan and Apply has completed successfully!"
